{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Application\\\\client\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useMemo } from 'react';\nimport { createTheme } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [mode, setMode] = useState('light');\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode,\n      ...(mode === 'light' ? {\n        // Light mode colors\n        primary: {\n          main: '#1976d2'\n        },\n        secondary: {\n          main: '#dc004e'\n        },\n        background: {\n          default: '#f5f5f5',\n          paper: '#ffffff'\n        }\n      } : {\n        // Dark mode colors\n        primary: {\n          main: '#90caf9'\n        },\n        secondary: {\n          main: '#f48fb1'\n        },\n        background: {\n          default: '#121212',\n          paper: '#1e1e1e'\n        }\n      })\n    }\n  }), [mode]);\n  const toggleTheme = () => {\n    setMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      mode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"u8zjN1kWJUDh6oH/uPWW9KokeTA=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useMemo","createTheme","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","mode","setMode","theme","palette","primary","main","secondary","background","default","paper","toggleTheme","prevMode","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["E:/Web Application/client/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useMemo } from 'react';\r\nimport { createTheme } from '@mui/material/styles';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [mode, setMode] = useState('light');\r\n\r\n  const theme = useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          mode,\r\n          ...(mode === 'light'\r\n            ? {\r\n                // Light mode colors\r\n                primary: {\r\n                  main: '#1976d2',\r\n                },\r\n                secondary: {\r\n                  main: '#dc004e',\r\n                },\r\n                background: {\r\n                  default: '#f5f5f5',\r\n                  paper: '#ffffff',\r\n                },\r\n              }\r\n            : {\r\n                // Dark mode colors\r\n                primary: {\r\n                  main: '#90caf9',\r\n                },\r\n                secondary: {\r\n                  main: '#f48fb1',\r\n                },\r\n                background: {\r\n                  default: '#121212',\r\n                  paper: '#1e1e1e',\r\n                },\r\n              }),\r\n        },\r\n      }),\r\n    [mode]\r\n  );\r\n\r\n  const toggleTheme = () => {\r\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, mode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,QAAQ,OAAO;AAC3E,SAASC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMQ,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAEzC,MAAMY,KAAK,GAAGV,OAAO,CACnB,MACEC,WAAW,CAAC;IACVU,OAAO,EAAE;MACPH,IAAI;MACJ,IAAIA,IAAI,KAAK,OAAO,GAChB;QACE;QACAI,OAAO,EAAE;UACPC,IAAI,EAAE;QACR,CAAC;QACDC,SAAS,EAAE;UACTD,IAAI,EAAE;QACR,CAAC;QACDE,UAAU,EAAE;UACVC,OAAO,EAAE,SAAS;UAClBC,KAAK,EAAE;QACT;MACF,CAAC,GACD;QACE;QACAL,OAAO,EAAE;UACPC,IAAI,EAAE;QACR,CAAC;QACDC,SAAS,EAAE;UACTD,IAAI,EAAE;QACR,CAAC;QACDE,UAAU,EAAE;UACVC,OAAO,EAAE,SAAS;UAClBC,KAAK,EAAE;QACT;MACF,CAAC;IACP;EACF,CAAC,CAAC,EACJ,CAACT,IAAI,CACP,CAAC;EAED,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBT,OAAO,CAAEU,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EAClE,CAAC;EAED,oBACEhB,OAAA,CAACC,YAAY,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEX,KAAK;MAAEF,IAAI;MAAEU;IAAY,CAAE;IAAAZ,QAAA,EACxDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAClB,EAAA,CAjDWF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAmD1B,OAAO,MAAMsB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAG9B,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACyB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}