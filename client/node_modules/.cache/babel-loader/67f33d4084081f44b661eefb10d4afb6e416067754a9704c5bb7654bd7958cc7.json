{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web Application\\\\client\\\\src\\\\components\\\\ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, TextField, Button, Paper, Typography, CircularProgress, Alert, Snackbar, AppBar, Toolbar, IconButton, Avatar, Menu, MenuItem, Dialog, DialogTitle, DialogContent, DialogActions, List, ListItem, ListItemText, ListItemIcon, Divider, Tooltip, Drawer, useTheme, useMediaQuery, Badge } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport MicIcon from '@mui/icons-material/Mic';\nimport MicOffIcon from '@mui/icons-material/MicOff';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport AlexaLogo from './AlexaLogo';\nimport { useTheme as useCustomTheme } from '../contexts/ThemeContext';\nimport { Add as AddIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [imageUrl, setImageUrl] = useState('');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [profileOpen, setProfileOpen] = useState(false);\n  const [clearChatOpen, setClearChatOpen] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [recognition, setRecognition] = useState(null);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [chats, setChats] = useState([{\n    id: 1,\n    title: 'New Chat',\n    lastMessage: 'Hello! How can I help you today?'\n  }, {\n    id: 2,\n    title: 'Project Discussion',\n    lastMessage: 'Let me help you with that...'\n  }, {\n    id: 3,\n    title: 'Research',\n    lastMessage: 'Here are the results...'\n  }]);\n  const messagesEndRef = useRef(null);\n  const {\n    user,\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const {\n    toggleTheme\n  } = useCustomTheme();\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setMessage(prev => prev + ' ' + transcript);\n        setIsListening(false);\n      };\n      recognition.onerror = event => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n        setError('Voice recognition error. Please try again.');\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      setRecognition(recognition);\n    } else {\n      setError('Speech recognition is not supported in this browser.');\n    }\n  }, []);\n  const toggleListening = () => {\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n      setIsListening(true);\n    }\n  };\n  const toggleColorMode = () => {\n    setIsDarkMode(prevMode => prevMode === 'light' ? 'dark' : 'light');\n  };\n  const handleMenuClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n  const handleProfileOpen = () => {\n    setProfileOpen(true);\n    handleMenuClose();\n  };\n  const handleProfileClose = () => {\n    setProfileOpen(false);\n  };\n  const handleClearChatOpen = () => {\n    setClearChatOpen(true);\n    handleMenuClose();\n  };\n  const handleClearChatClose = () => {\n    setClearChatOpen(false);\n  };\n  const handleClearChat = () => {\n    setMessages([]);\n    handleClearChatClose();\n  };\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      setImageUrl(URL.createObjectURL(file));\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!message.trim() && !imageUrl) return;\n    const userMessage = message.trim();\n    setMessage('');\n    setImageUrl('');\n    setLoading(true);\n    setError(null);\n    let imageUrl = null;\n    if (imageUrl) {\n      imageUrl = this.state.imageUrl;\n    }\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: userMessage || (imageUrl ? 'Analyze this image' : ''),\n      imageUrl: imageUrl\n    }]);\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', {\n        message: userMessage,\n        imageUrl: imageUrl\n      });\n      setMessages(prev => [...prev, {\n        sender: 'alexa',\n        text: response.data.response\n      }]);\n    } catch (error) {\n      setError('Failed to send message');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCloseError = () => {\n    setError(null);\n  };\n  const handleNewChat = () => {\n    setSelectedChat(null);\n    setMessages([]);\n    setMessage('');\n  };\n  const handleSelectChat = chat => {\n    setSelectedChat(chat);\n    // In a real app, you would load the chat history here\n    setMessages([{\n      text: chat.lastMessage,\n      sender: 'ai',\n      timestamp: new Date()\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh',\n      bgcolor: 'background.default'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: isMobile ? \"temporary\" : \"permanent\",\n      open: sidebarOpen,\n      onClose: () => setSidebarOpen(false),\n      sx: {\n        width: 280,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: 280,\n          boxSizing: 'border-box',\n          bgcolor: 'background.paper',\n          borderRight: '1px solid',\n          borderColor: 'divider'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 24\n          }, this),\n          onClick: handleNewChat,\n          sx: {\n            mb: 2\n          },\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            flex: 1,\n            overflow: 'auto'\n          },\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              button: true,\n              selected: (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id) === chat.id,\n              onClick: () => handleSelectChat(chat),\n              sx: {\n                borderRadius: 1,\n                mb: 1,\n                '&.Mui-selected': {\n                  bgcolor: 'primary.light',\n                  '&:hover': {\n                    bgcolor: 'primary.light'\n                  }\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: chat.title,\n                secondary: chat.lastMessage,\n                primaryTypographyProps: {\n                  noWrap: true,\n                  fontWeight: (selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id) === chat.id ? 'bold' : 'normal'\n                },\n                secondaryTypographyProps: {\n                  noWrap: true,\n                  variant: 'body2',\n                  color: 'text.secondary'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"default\",\n        elevation: 1,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [isMobile && /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            onClick: () => setSidebarOpen(!sidebarOpen),\n            sx: {\n              mr: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(AlexaLogo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            onClick: toggleTheme,\n            children: isDarkMode ? /*#__PURE__*/_jsxDEV(Brightness7Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(Brightness4Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            onClick: e => setAnchorEl(e.currentTarget),\n            children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          overflow: 'auto',\n          p: 2\n        },\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: msg.sender === 'user' ? 'flex-end' : 'flex-start',\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            sx: {\n              p: 2,\n              maxWidth: '70%',\n              bgcolor: msg.sender === 'user' ? 'primary.main' : 'background.paper',\n              color: msg.sender === 'user' ? 'primary.contrastText' : 'text.primary',\n              borderRadius: 2\n            },\n            children: [msg.text, msg.imageUrl && /*#__PURE__*/_jsxDEV(Box, {\n              component: \"img\",\n              src: msg.imageUrl,\n              alt: \"Uploaded\",\n              sx: {\n                maxWidth: '100%',\n                maxHeight: 200,\n                mt: 1,\n                borderRadius: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          borderTop: '1px solid',\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            placeholder: \"Type a message...\",\n            value: message,\n            onChange: e => setMessage(e.target.value),\n            onKeyPress: e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                handleSendMessage();\n              }\n            },\n            multiline: true,\n            maxRows: 4,\n            sx: {\n              '& .MuiOutlinedInput-root': {\n                borderRadius: 2\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            },\n            id: \"image-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image-upload\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              component: \"span\",\n              sx: {\n                bgcolor: 'background.paper',\n                '&:hover': {\n                  bgcolor: 'action.hover'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: isListening ? \"Stop listening\" : \"Start voice input\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              color: isListening ? \"error\" : \"primary\",\n              onClick: toggleListening,\n              sx: {\n                bgcolor: 'background.paper',\n                '&:hover': {\n                  bgcolor: 'action.hover'\n                }\n              },\n              children: isListening ? /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 32\n              }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSendMessage,\n            disabled: !message.trim() && !imageUrl,\n            sx: {\n              borderRadius: 2,\n              minWidth: 'auto',\n              px: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: profileOpen,\n      onClose: handleProfileClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Profile Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Name\",\n              secondary: (user === null || user === void 0 ? void 0 : user.name) || 'Not set'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Email\",\n              secondary: (user === null || user === void 0 ? void 0 : user.email) || 'Not set'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleProfileClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: clearChatOpen,\n      onClose: handleClearChatClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Clear Chat History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Are you sure you want to clear all chat history? This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClearChatClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClearChat,\n          color: \"error\",\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: error !== null,\n      autoHideDuration: 6000,\n      onClose: handleCloseError,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseError,\n        severity: \"error\",\n        sx: {\n          width: '100%'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"auCXyENXi4bHei5q/TyLyUwDKk0=\", false, function () {\n  return [useAuth, useNavigate, useTheme, useMediaQuery, useCustomTheme];\n});\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","TextField","Button","Paper","Typography","CircularProgress","Alert","Snackbar","AppBar","Toolbar","IconButton","Avatar","Menu","MenuItem","Dialog","DialogTitle","DialogContent","DialogActions","List","ListItem","ListItemText","ListItemIcon","Divider","Tooltip","Drawer","useTheme","useMediaQuery","Badge","SendIcon","SmartToyIcon","PersonIcon","AttachFileIcon","DeleteIcon","AccountCircleIcon","LogoutIcon","Brightness4Icon","Brightness7Icon","MicIcon","MicOffIcon","useAuth","useNavigate","axios","AlexaLogo","useCustomTheme","Add","AddIcon","jsxDEV","_jsxDEV","ChatApp","_s","message","setMessage","messages","setMessages","imageUrl","setImageUrl","anchorEl","setAnchorEl","isDarkMode","setIsDarkMode","profileOpen","setProfileOpen","clearChatOpen","setClearChatOpen","isListening","setIsListening","recognition","setRecognition","sidebarOpen","setSidebarOpen","selectedChat","setSelectedChat","chats","setChats","id","title","lastMessage","messagesEndRef","user","logout","navigate","theme","isMobile","breakpoints","down","toggleTheme","window","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","transcript","results","prev","onerror","console","error","setError","onend","toggleListening","stop","start","toggleColorMode","prevMode","handleMenuClick","currentTarget","handleMenuClose","handleProfileOpen","handleProfileClose","handleClearChatOpen","handleClearChatClose","handleClearChat","handleLogout","handleImageUpload","file","target","files","URL","createObjectURL","handleSendMessage","trim","userMessage","setLoading","state","sender","text","response","post","data","handleCloseError","handleNewChat","handleSelectChat","chat","timestamp","Date","sx","display","height","bgcolor","children","variant","open","onClose","width","flexShrink","boxSizing","borderRight","borderColor","p","flexDirection","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mb","flex","overflow","map","Fragment","button","selected","borderRadius","ChatIcon","primary","secondary","primaryTypographyProps","noWrap","fontWeight","secondaryTypographyProps","color","position","elevation","edge","mr","flexGrow","e","msg","index","justifyContent","maxWidth","component","src","alt","maxHeight","mt","ref","borderTop","gap","fullWidth","placeholder","value","onChange","onKeyPress","key","shiftKey","preventDefault","multiline","maxRows","type","accept","style","htmlFor","disabled","minWidth","px","name","email","autoHideDuration","severity","_c","$RefreshReg$"],"sources":["E:/Web Application/client/src/components/ChatApp.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  Paper,\n  Typography,\n  CircularProgress,\n  Alert,\n  Snackbar,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Avatar,\n  Menu,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Divider,\n  Tooltip,\n  Drawer,\n  useTheme,\n  useMediaQuery,\n  Badge,\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\nimport PersonIcon from '@mui/icons-material/Person';\nimport AttachFileIcon from '@mui/icons-material/AttachFile';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport MicIcon from '@mui/icons-material/Mic';\nimport MicOffIcon from '@mui/icons-material/MicOff';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport AlexaLogo from './AlexaLogo';\nimport { useTheme as useCustomTheme } from '../contexts/ThemeContext';\nimport { Add as AddIcon } from '@mui/icons-material';\n\nconst ChatApp = () => {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [imageUrl, setImageUrl] = useState('');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [profileOpen, setProfileOpen] = useState(false);\n  const [clearChatOpen, setClearChatOpen] = useState(false);\n  const [isListening, setIsListening] = useState(false);\n  const [recognition, setRecognition] = useState(null);\n  const [sidebarOpen, setSidebarOpen] = useState(true);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [chats, setChats] = useState([\n    { id: 1, title: 'New Chat', lastMessage: 'Hello! How can I help you today?' },\n    { id: 2, title: 'Project Discussion', lastMessage: 'Let me help you with that...' },\n    { id: 3, title: 'Research', lastMessage: 'Here are the results...' }\n  ]);\n  const messagesEndRef = useRef(null);\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  const { toggleTheme } = useCustomTheme();\n\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.lang = 'en-US';\n\n      recognition.onresult = (event) => {\n        const transcript = event.results[0][0].transcript;\n        setMessage(prev => prev + ' ' + transcript);\n        setIsListening(false);\n      };\n\n      recognition.onerror = (event) => {\n        console.error('Speech recognition error:', event.error);\n        setIsListening(false);\n        setError('Voice recognition error. Please try again.');\n      };\n\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n\n      setRecognition(recognition);\n    } else {\n      setError('Speech recognition is not supported in this browser.');\n    }\n  }, []);\n\n  const toggleListening = () => {\n    if (isListening) {\n      recognition.stop();\n    } else {\n      recognition.start();\n      setIsListening(true);\n    }\n  };\n\n  const toggleColorMode = () => {\n    setIsDarkMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n  };\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleProfileOpen = () => {\n    setProfileOpen(true);\n    handleMenuClose();\n  };\n\n  const handleProfileClose = () => {\n    setProfileOpen(false);\n  };\n\n  const handleClearChatOpen = () => {\n    setClearChatOpen(true);\n    handleMenuClose();\n  };\n\n  const handleClearChatClose = () => {\n    setClearChatOpen(false);\n  };\n\n  const handleClearChat = () => {\n    setMessages([]);\n    handleClearChatClose();\n  };\n\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n\n  const handleImageUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setImageUrl(URL.createObjectURL(file));\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!message.trim() && !imageUrl) return;\n\n    const userMessage = message.trim();\n    setMessage('');\n    setImageUrl('');\n    setLoading(true);\n    setError(null);\n\n    let imageUrl = null;\n    if (imageUrl) {\n      imageUrl = this.state.imageUrl;\n    }\n\n    setMessages(prev => [...prev, { \n      sender: 'user', \n      text: userMessage || (imageUrl ? 'Analyze this image' : ''),\n      imageUrl: imageUrl\n    }]);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', {\n        message: userMessage,\n        imageUrl: imageUrl\n      });\n\n      setMessages(prev => [...prev, { \n        sender: 'alexa', \n        text: response.data.response \n      }]);\n    } catch (error) {\n      setError('Failed to send message');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCloseError = () => {\n    setError(null);\n  };\n\n  const handleNewChat = () => {\n    setSelectedChat(null);\n    setMessages([]);\n    setMessage('');\n  };\n\n  const handleSelectChat = (chat) => {\n    setSelectedChat(chat);\n    // In a real app, you would load the chat history here\n    setMessages([\n      { text: chat.lastMessage, sender: 'ai', timestamp: new Date() }\n    ]);\n  };\n\n  return (\n    <Box sx={{ display: 'flex', height: '100vh', bgcolor: 'background.default' }}>\n      {/* Sidebar */}\n      <Drawer\n        variant={isMobile ? \"temporary\" : \"permanent\"}\n        open={sidebarOpen}\n        onClose={() => setSidebarOpen(false)}\n        sx={{\n          width: 280,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: 280,\n            boxSizing: 'border-box',\n            bgcolor: 'background.paper',\n            borderRight: '1px solid',\n            borderColor: 'divider'\n          },\n        }}\n      >\n        <Box sx={{ p: 2, display: 'flex', flexDirection: 'column', height: '100%' }}>\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={handleNewChat}\n            sx={{ mb: 2 }}\n          >\n            New Chat\n          </Button>\n          \n          <List sx={{ flex: 1, overflow: 'auto' }}>\n            {chats.map((chat) => (\n              <React.Fragment key={chat.id}>\n                <ListItem\n                  button\n                  selected={selectedChat?.id === chat.id}\n                  onClick={() => handleSelectChat(chat)}\n                  sx={{\n                    borderRadius: 1,\n                    mb: 1,\n                    '&.Mui-selected': {\n                      bgcolor: 'primary.light',\n                      '&:hover': {\n                        bgcolor: 'primary.light',\n                      },\n                    },\n                  }}\n                >\n                  <ListItemIcon>\n                    <ChatIcon />\n                  </ListItemIcon>\n                  <ListItemText\n                    primary={chat.title}\n                    secondary={chat.lastMessage}\n                    primaryTypographyProps={{\n                      noWrap: true,\n                      fontWeight: selectedChat?.id === chat.id ? 'bold' : 'normal'\n                    }}\n                    secondaryTypographyProps={{\n                      noWrap: true,\n                      variant: 'body2',\n                      color: 'text.secondary'\n                    }}\n                  />\n                </ListItem>\n                <Divider />\n              </React.Fragment>\n            ))}\n          </List>\n        </Box>\n      </Drawer>\n\n      {/* Main Content */}\n      <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n        <AppBar position=\"static\" color=\"default\" elevation={1}>\n          <Toolbar>\n            {isMobile && (\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={() => setSidebarOpen(!sidebarOpen)}\n                sx={{ mr: 2 }}\n              >\n                <ChatIcon />\n              </IconButton>\n            )}\n            <Box sx={{ flexGrow: 1 }}>\n              <AlexaLogo />\n            </Box>\n            <IconButton color=\"inherit\" onClick={toggleTheme}>\n              {isDarkMode ? <Brightness7Icon /> : <Brightness4Icon />}\n            </IconButton>\n            <IconButton\n              color=\"inherit\"\n              onClick={(e) => setAnchorEl(e.currentTarget)}\n            >\n              <AccountCircleIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <Box sx={{ flex: 1, overflow: 'auto', p: 2 }}>\n          {messages.map((msg, index) => (\n            <Box\n              key={index}\n              sx={{\n                display: 'flex',\n                justifyContent: msg.sender === 'user' ? 'flex-end' : 'flex-start',\n                mb: 2\n              }}\n            >\n              <Paper\n                elevation={1}\n                sx={{\n                  p: 2,\n                  maxWidth: '70%',\n                  bgcolor: msg.sender === 'user' ? 'primary.main' : 'background.paper',\n                  color: msg.sender === 'user' ? 'primary.contrastText' : 'text.primary',\n                  borderRadius: 2\n                }}\n              >\n                {msg.text}\n                {msg.imageUrl && (\n                  <Box\n                    component=\"img\"\n                    src={msg.imageUrl}\n                    alt=\"Uploaded\"\n                    sx={{\n                      maxWidth: '100%',\n                      maxHeight: 200,\n                      mt: 1,\n                      borderRadius: 1\n                    }}\n                  />\n                )}\n              </Paper>\n            </Box>\n          ))}\n          <div ref={messagesEndRef} />\n        </Box>\n\n        <Box sx={{ p: 2, borderTop: '1px solid', borderColor: 'divider' }}>\n          <Box sx={{ display: 'flex', gap: 1 }}>\n            <TextField\n              fullWidth\n              variant=\"outlined\"\n              placeholder=\"Type a message...\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleSendMessage();\n                }\n              }}\n              multiline\n              maxRows={4}\n              sx={{\n                '& .MuiOutlinedInput-root': {\n                  borderRadius: 2,\n                }\n              }}\n            />\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleImageUpload}\n              style={{ display: 'none' }}\n              id=\"image-upload\"\n            />\n            <label htmlFor=\"image-upload\">\n              <IconButton\n                color=\"primary\"\n                component=\"span\"\n                sx={{ \n                  bgcolor: 'background.paper',\n                  '&:hover': { bgcolor: 'action.hover' }\n                }}\n              >\n                <AttachFileIcon />\n              </IconButton>\n            </label>\n            <Tooltip title={isListening ? \"Stop listening\" : \"Start voice input\"}>\n              <IconButton\n                color={isListening ? \"error\" : \"primary\"}\n                onClick={toggleListening}\n                sx={{ \n                  bgcolor: 'background.paper',\n                  '&:hover': { bgcolor: 'action.hover' }\n                }}\n              >\n                {isListening ? <MicOffIcon /> : <MicIcon />}\n              </IconButton>\n            </Tooltip>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSendMessage}\n              disabled={!message.trim() && !imageUrl}\n              sx={{ \n                borderRadius: 2,\n                minWidth: 'auto',\n                px: 2\n              }}\n            >\n              <SendIcon />\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n\n      {/* Profile Dialog */}\n      <Dialog open={profileOpen} onClose={handleProfileClose}>\n        <DialogTitle>Profile Information</DialogTitle>\n        <DialogContent>\n          <List>\n            <ListItem>\n              <ListItemText\n                primary=\"Name\"\n                secondary={user?.name || 'Not set'}\n              />\n            </ListItem>\n            <ListItem>\n              <ListItemText\n                primary=\"Email\"\n                secondary={user?.email || 'Not set'}\n              />\n            </ListItem>\n          </List>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleProfileClose}>Close</Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Clear Chat Dialog */}\n      <Dialog open={clearChatOpen} onClose={handleClearChatClose}>\n        <DialogTitle>Clear Chat History</DialogTitle>\n        <DialogContent>\n          <Typography>\n            Are you sure you want to clear all chat history? This action cannot be undone.\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClearChatClose}>Cancel</Button>\n          <Button onClick={handleClearChat} color=\"error\">\n            Clear\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Snackbar\n        open={error !== null}\n        autoHideDuration={6000}\n        onClose={handleCloseError}\n      >\n        <Alert onClose={handleCloseError} severity=\"error\" sx={{ width: '100%' }}>\n          {error}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default ChatApp; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SACEC,GAAG,EACHC,SAAS,EACTC,MAAM,EACNC,KAAK,EACLC,UAAU,EACVC,gBAAgB,EAChBC,KAAK,EACLC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,IAAI,EACJC,QAAQ,EACRC,MAAM,EACNC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,IAAI,EACJC,QAAQ,EACRC,YAAY,EACZC,YAAY,EACZC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,QAAQ,EACRC,aAAa,EACbC,KAAK,QACA,eAAe;AACtB,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,eAAe,MAAM,iCAAiC;AAC7D,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASjB,QAAQ,IAAIkB,cAAc,QAAQ,0BAA0B;AACrE,SAASC,GAAG,IAAIC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACuD,QAAQ,EAAEC,WAAW,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyD,QAAQ,EAAEC,WAAW,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2D,QAAQ,EAAEC,WAAW,CAAC,GAAG5D,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC6D,UAAU,EAAEC,aAAa,CAAC,GAAG9D,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC+D,WAAW,EAAEC,cAAc,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiE,aAAa,EAAEC,gBAAgB,CAAC,GAAGlE,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACmE,WAAW,EAAEC,cAAc,CAAC,GAAGpE,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqE,WAAW,EAAEC,cAAc,CAAC,GAAGtE,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACuE,WAAW,EAAEC,cAAc,CAAC,GAAGxE,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACyE,YAAY,EAAEC,eAAe,CAAC,GAAG1E,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC2E,KAAK,EAAEC,QAAQ,CAAC,GAAG5E,QAAQ,CAAC,CACjC;IAAE6E,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,WAAW,EAAE;EAAmC,CAAC,EAC7E;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,oBAAoB;IAAEC,WAAW,EAAE;EAA+B,CAAC,EACnF;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,UAAU;IAAEC,WAAW,EAAE;EAA0B,CAAC,CACrE,CAAC;EACF,MAAMC,cAAc,GAAG/E,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM;IAAEgF,IAAI;IAAEC;EAAO,CAAC,GAAGxC,OAAO,CAAC,CAAC;EAClC,MAAMyC,QAAQ,GAAGxC,WAAW,CAAC,CAAC;EAC9B,MAAMyC,KAAK,GAAGxD,QAAQ,CAAC,CAAC;EACxB,MAAMyD,QAAQ,GAAGxD,aAAa,CAACuD,KAAK,CAACE,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5D,MAAM;IAAEC;EAAY,CAAC,GAAG1C,cAAc,CAAC,CAAC;EAExC5C,SAAS,CAAC,MAAM;IACd;IACA,IAAI,yBAAyB,IAAIuF,MAAM,EAAE;MACvC,MAAMpB,WAAW,GAAG,IAAIoB,MAAM,CAACC,uBAAuB,CAAC,CAAC;MACxDrB,WAAW,CAACsB,UAAU,GAAG,KAAK;MAC9BtB,WAAW,CAACuB,cAAc,GAAG,KAAK;MAClCvB,WAAW,CAACwB,IAAI,GAAG,OAAO;MAE1BxB,WAAW,CAACyB,QAAQ,GAAIC,KAAK,IAAK;QAChC,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;QACjD1C,UAAU,CAAC4C,IAAI,IAAIA,IAAI,GAAG,GAAG,GAAGF,UAAU,CAAC;QAC3C5B,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDC,WAAW,CAAC8B,OAAO,GAAIJ,KAAK,IAAK;QAC/BK,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEN,KAAK,CAACM,KAAK,CAAC;QACvDjC,cAAc,CAAC,KAAK,CAAC;QACrBkC,QAAQ,CAAC,4CAA4C,CAAC;MACxD,CAAC;MAEDjC,WAAW,CAACkC,KAAK,GAAG,MAAM;QACxBnC,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MAEDE,cAAc,CAACD,WAAW,CAAC;IAC7B,CAAC,MAAM;MACLiC,QAAQ,CAAC,sDAAsD,CAAC;IAClE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIrC,WAAW,EAAE;MACfE,WAAW,CAACoC,IAAI,CAAC,CAAC;IACpB,CAAC,MAAM;MACLpC,WAAW,CAACqC,KAAK,CAAC,CAAC;MACnBtC,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMuC,eAAe,GAAGA,CAAA,KAAM;IAC5B7C,aAAa,CAAE8C,QAAQ,IAAMA,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACxE,CAAC;EAED,MAAMC,eAAe,GAAId,KAAK,IAAK;IACjCnC,WAAW,CAACmC,KAAK,CAACe,aAAa,CAAC;EAClC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BnD,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMoD,iBAAiB,GAAGA,CAAA,KAAM;IAC9BhD,cAAc,CAAC,IAAI,CAAC;IACpB+C,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/BjD,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAMkD,mBAAmB,GAAGA,CAAA,KAAM;IAChChD,gBAAgB,CAAC,IAAI,CAAC;IACtB6C,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IACjCjD,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMkD,eAAe,GAAGA,CAAA,KAAM;IAC5B5D,WAAW,CAAC,EAAE,CAAC;IACf2D,oBAAoB,CAAC,CAAC;EACxB,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBnC,MAAM,CAAC,CAAC;IACRC,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMmC,iBAAiB,GAAIvB,KAAK,IAAK;IACnC,MAAMwB,IAAI,GAAGxB,KAAK,CAACyB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACR7D,WAAW,CAACgE,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC;IACxC;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI,CAACvE,OAAO,CAACwE,IAAI,CAAC,CAAC,IAAI,CAACpE,QAAQ,EAAE;IAElC,MAAMqE,WAAW,GAAGzE,OAAO,CAACwE,IAAI,CAAC,CAAC;IAClCvE,UAAU,CAAC,EAAE,CAAC;IACdI,WAAW,CAAC,EAAE,CAAC;IACfqE,UAAU,CAAC,IAAI,CAAC;IAChBzB,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI7C,QAAQ,GAAG,IAAI;IACnB,IAAIA,QAAQ,EAAE;MACZA,QAAQ,GAAG,IAAI,CAACuE,KAAK,CAACvE,QAAQ;IAChC;IAEAD,WAAW,CAAC0C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAC5B+B,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEJ,WAAW,KAAKrE,QAAQ,GAAG,oBAAoB,GAAG,EAAE,CAAC;MAC3DA,QAAQ,EAAEA;IACZ,CAAC,CAAC,CAAC;IAEH,IAAI;MACF,MAAM0E,QAAQ,GAAG,MAAMvF,KAAK,CAACwF,IAAI,CAAC,gCAAgC,EAAE;QAClE/E,OAAO,EAAEyE,WAAW;QACpBrE,QAAQ,EAAEA;MACZ,CAAC,CAAC;MAEFD,WAAW,CAAC0C,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5B+B,MAAM,EAAE,OAAO;QACfC,IAAI,EAAEC,QAAQ,CAACE,IAAI,CAACF;MACtB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACdC,QAAQ,CAAC,wBAAwB,CAAC;IACpC,CAAC,SAAS;MACRyB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;IAC7BhC,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,MAAMiC,aAAa,GAAGA,CAAA,KAAM;IAC1B7D,eAAe,CAAC,IAAI,CAAC;IACrBlB,WAAW,CAAC,EAAE,CAAC;IACfF,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,MAAMkF,gBAAgB,GAAIC,IAAI,IAAK;IACjC/D,eAAe,CAAC+D,IAAI,CAAC;IACrB;IACAjF,WAAW,CAAC,CACV;MAAE0E,IAAI,EAAEO,IAAI,CAAC1D,WAAW;MAAEkD,MAAM,EAAE,IAAI;MAAES,SAAS,EAAE,IAAIC,IAAI,CAAC;IAAE,CAAC,CAChE,CAAC;EACJ,CAAC;EAED,oBACEzF,OAAA,CAAC/C,GAAG;IAACyI,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAqB,CAAE;IAAAC,QAAA,gBAE3E9F,OAAA,CAACvB,MAAM;MACLsH,OAAO,EAAE5D,QAAQ,GAAG,WAAW,GAAG,WAAY;MAC9C6D,IAAI,EAAE3E,WAAY;MAClB4E,OAAO,EAAEA,CAAA,KAAM3E,cAAc,CAAC,KAAK,CAAE;MACrCoE,EAAE,EAAE;QACFQ,KAAK,EAAE,GAAG;QACVC,UAAU,EAAE,CAAC;QACb,oBAAoB,EAAE;UACpBD,KAAK,EAAE,GAAG;UACVE,SAAS,EAAE,YAAY;UACvBP,OAAO,EAAE,kBAAkB;UAC3BQ,WAAW,EAAE,WAAW;UACxBC,WAAW,EAAE;QACf;MACF,CAAE;MAAAR,QAAA,eAEF9F,OAAA,CAAC/C,GAAG;QAACyI,EAAE,EAAE;UAAEa,CAAC,EAAE,CAAC;UAAEZ,OAAO,EAAE,MAAM;UAAEa,aAAa,EAAE,QAAQ;UAAEZ,MAAM,EAAE;QAAO,CAAE;QAAAE,QAAA,gBAC1E9F,OAAA,CAAC7C,MAAM;UACL4I,OAAO,EAAC,WAAW;UACnBU,SAAS,eAAEzG,OAAA,CAACF,OAAO;YAAA4G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACvBC,OAAO,EAAEzB,aAAc;UACvBK,EAAE,EAAE;YAAEqB,EAAE,EAAE;UAAE,CAAE;UAAAjB,QAAA,EACf;QAED;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET7G,OAAA,CAAC7B,IAAI;UAACuH,EAAE,EAAE;YAAEsB,IAAI,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAAAnB,QAAA,EACrCrE,KAAK,CAACyF,GAAG,CAAE3B,IAAI,iBACdvF,OAAA,CAACnD,KAAK,CAACsK,QAAQ;YAAArB,QAAA,gBACb9F,OAAA,CAAC5B,QAAQ;cACPgJ,MAAM;cACNC,QAAQ,EAAE,CAAA9F,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,EAAE,MAAK4D,IAAI,CAAC5D,EAAG;cACvCmF,OAAO,EAAEA,CAAA,KAAMxB,gBAAgB,CAACC,IAAI,CAAE;cACtCG,EAAE,EAAE;gBACF4B,YAAY,EAAE,CAAC;gBACfP,EAAE,EAAE,CAAC;gBACL,gBAAgB,EAAE;kBAChBlB,OAAO,EAAE,eAAe;kBACxB,SAAS,EAAE;oBACTA,OAAO,EAAE;kBACX;gBACF;cACF,CAAE;cAAAC,QAAA,gBAEF9F,OAAA,CAAC1B,YAAY;gBAAAwH,QAAA,eACX9F,OAAA,CAACuH,QAAQ;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,eACf7G,OAAA,CAAC3B,YAAY;gBACXmJ,OAAO,EAAEjC,IAAI,CAAC3D,KAAM;gBACpB6F,SAAS,EAAElC,IAAI,CAAC1D,WAAY;gBAC5B6F,sBAAsB,EAAE;kBACtBC,MAAM,EAAE,IAAI;kBACZC,UAAU,EAAE,CAAArG,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEI,EAAE,MAAK4D,IAAI,CAAC5D,EAAE,GAAG,MAAM,GAAG;gBACtD,CAAE;gBACFkG,wBAAwB,EAAE;kBACxBF,MAAM,EAAE,IAAI;kBACZ5B,OAAO,EAAE,OAAO;kBAChB+B,KAAK,EAAE;gBACT;cAAE;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACM,CAAC,eACX7G,OAAA,CAACzB,OAAO;cAAAmI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA,GAjCQtB,IAAI,CAAC5D,EAAE;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkCZ,CACjB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGT7G,OAAA,CAAC/C,GAAG;MAACyI,EAAE,EAAE;QAAEsB,IAAI,EAAE,CAAC;QAAErB,OAAO,EAAE,MAAM;QAAEa,aAAa,EAAE;MAAS,CAAE;MAAAV,QAAA,gBAC7D9F,OAAA,CAACvC,MAAM;QAACsK,QAAQ,EAAC,QAAQ;QAACD,KAAK,EAAC,SAAS;QAACE,SAAS,EAAE,CAAE;QAAAlC,QAAA,eACrD9F,OAAA,CAACtC,OAAO;UAAAoI,QAAA,GACL3D,QAAQ,iBACPnC,OAAA,CAACrC,UAAU;YACTsK,IAAI,EAAC,OAAO;YACZH,KAAK,EAAC,SAAS;YACfhB,OAAO,EAAEA,CAAA,KAAMxF,cAAc,CAAC,CAACD,WAAW,CAAE;YAC5CqE,EAAE,EAAE;cAAEwC,EAAE,EAAE;YAAE,CAAE;YAAApC,QAAA,eAEd9F,OAAA,CAACuH,QAAQ;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CACb,eACD7G,OAAA,CAAC/C,GAAG;YAACyI,EAAE,EAAE;cAAEyC,QAAQ,EAAE;YAAE,CAAE;YAAArC,QAAA,eACvB9F,OAAA,CAACL,SAAS;cAAA+G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACN7G,OAAA,CAACrC,UAAU;YAACmK,KAAK,EAAC,SAAS;YAAChB,OAAO,EAAExE,WAAY;YAAAwD,QAAA,EAC9CnF,UAAU,gBAAGX,OAAA,CAACX,eAAe;cAAAqH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,gBAAG7G,OAAA,CAACZ,eAAe;cAAAsH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC,eACb7G,OAAA,CAACrC,UAAU;YACTmK,KAAK,EAAC,SAAS;YACfhB,OAAO,EAAGsB,CAAC,IAAK1H,WAAW,CAAC0H,CAAC,CAACxE,aAAa,CAAE;YAAAkC,QAAA,eAE7C9F,OAAA,CAACd,iBAAiB;cAAAwH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAET7G,OAAA,CAAC/C,GAAG;QAACyI,EAAE,EAAE;UAAEsB,IAAI,EAAE,CAAC;UAAEC,QAAQ,EAAE,MAAM;UAAEV,CAAC,EAAE;QAAE,CAAE;QAAAT,QAAA,GAC1CzF,QAAQ,CAAC6G,GAAG,CAAC,CAACmB,GAAG,EAAEC,KAAK,kBACvBtI,OAAA,CAAC/C,GAAG;UAEFyI,EAAE,EAAE;YACFC,OAAO,EAAE,MAAM;YACf4C,cAAc,EAAEF,GAAG,CAACtD,MAAM,KAAK,MAAM,GAAG,UAAU,GAAG,YAAY;YACjEgC,EAAE,EAAE;UACN,CAAE;UAAAjB,QAAA,eAEF9F,OAAA,CAAC5C,KAAK;YACJ4K,SAAS,EAAE,CAAE;YACbtC,EAAE,EAAE;cACFa,CAAC,EAAE,CAAC;cACJiC,QAAQ,EAAE,KAAK;cACf3C,OAAO,EAAEwC,GAAG,CAACtD,MAAM,KAAK,MAAM,GAAG,cAAc,GAAG,kBAAkB;cACpE+C,KAAK,EAAEO,GAAG,CAACtD,MAAM,KAAK,MAAM,GAAG,sBAAsB,GAAG,cAAc;cACtEuC,YAAY,EAAE;YAChB,CAAE;YAAAxB,QAAA,GAEDuC,GAAG,CAACrD,IAAI,EACRqD,GAAG,CAAC9H,QAAQ,iBACXP,OAAA,CAAC/C,GAAG;cACFwL,SAAS,EAAC,KAAK;cACfC,GAAG,EAAEL,GAAG,CAAC9H,QAAS;cAClBoI,GAAG,EAAC,UAAU;cACdjD,EAAE,EAAE;gBACF8C,QAAQ,EAAE,MAAM;gBAChBI,SAAS,EAAE,GAAG;gBACdC,EAAE,EAAE,CAAC;gBACLvB,YAAY,EAAE;cAChB;YAAE;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACF;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC,GA/BHyB,KAAK;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgCP,CACN,CAAC,eACF7G,OAAA;UAAK8I,GAAG,EAAEhH;QAAe;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eAEN7G,OAAA,CAAC/C,GAAG;QAACyI,EAAE,EAAE;UAAEa,CAAC,EAAE,CAAC;UAAEwC,SAAS,EAAE,WAAW;UAAEzC,WAAW,EAAE;QAAU,CAAE;QAAAR,QAAA,eAChE9F,OAAA,CAAC/C,GAAG;UAACyI,EAAE,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEqD,GAAG,EAAE;UAAE,CAAE;UAAAlD,QAAA,gBACnC9F,OAAA,CAAC9C,SAAS;YACR+L,SAAS;YACTlD,OAAO,EAAC,UAAU;YAClBmD,WAAW,EAAC,mBAAmB;YAC/BC,KAAK,EAAEhJ,OAAQ;YACfiJ,QAAQ,EAAGhB,CAAC,IAAKhI,UAAU,CAACgI,CAAC,CAAC9D,MAAM,CAAC6E,KAAK,CAAE;YAC5CE,UAAU,EAAGjB,CAAC,IAAK;cACjB,IAAIA,CAAC,CAACkB,GAAG,KAAK,OAAO,IAAI,CAAClB,CAAC,CAACmB,QAAQ,EAAE;gBACpCnB,CAAC,CAACoB,cAAc,CAAC,CAAC;gBAClB9E,iBAAiB,CAAC,CAAC;cACrB;YACF,CAAE;YACF+E,SAAS;YACTC,OAAO,EAAE,CAAE;YACXhE,EAAE,EAAE;cACF,0BAA0B,EAAE;gBAC1B4B,YAAY,EAAE;cAChB;YACF;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACF7G,OAAA;YACE2J,IAAI,EAAC,MAAM;YACXC,MAAM,EAAC,SAAS;YAChBR,QAAQ,EAAEhF,iBAAkB;YAC5ByF,KAAK,EAAE;cAAElE,OAAO,EAAE;YAAO,CAAE;YAC3BhE,EAAE,EAAC;UAAc;YAAA+E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACF7G,OAAA;YAAO8J,OAAO,EAAC,cAAc;YAAAhE,QAAA,eAC3B9F,OAAA,CAACrC,UAAU;cACTmK,KAAK,EAAC,SAAS;cACfW,SAAS,EAAC,MAAM;cAChB/C,EAAE,EAAE;gBACFG,OAAO,EAAE,kBAAkB;gBAC3B,SAAS,EAAE;kBAAEA,OAAO,EAAE;gBAAe;cACvC,CAAE;cAAAC,QAAA,eAEF9F,OAAA,CAAChB,cAAc;gBAAA0H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eACR7G,OAAA,CAACxB,OAAO;YAACoD,KAAK,EAAEX,WAAW,GAAG,gBAAgB,GAAG,mBAAoB;YAAA6E,QAAA,eACnE9F,OAAA,CAACrC,UAAU;cACTmK,KAAK,EAAE7G,WAAW,GAAG,OAAO,GAAG,SAAU;cACzC6F,OAAO,EAAExD,eAAgB;cACzBoC,EAAE,EAAE;gBACFG,OAAO,EAAE,kBAAkB;gBAC3B,SAAS,EAAE;kBAAEA,OAAO,EAAE;gBAAe;cACvC,CAAE;cAAAC,QAAA,EAED7E,WAAW,gBAAGjB,OAAA,CAACT,UAAU;gBAAAmH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAAG7G,OAAA,CAACV,OAAO;gBAAAoH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACV7G,OAAA,CAAC7C,MAAM;YACL4I,OAAO,EAAC,WAAW;YACnB+B,KAAK,EAAC,SAAS;YACfhB,OAAO,EAAEpC,iBAAkB;YAC3BqF,QAAQ,EAAE,CAAC5J,OAAO,CAACwE,IAAI,CAAC,CAAC,IAAI,CAACpE,QAAS;YACvCmF,EAAE,EAAE;cACF4B,YAAY,EAAE,CAAC;cACf0C,QAAQ,EAAE,MAAM;cAChBC,EAAE,EAAE;YACN,CAAE;YAAAnE,QAAA,eAEF9F,OAAA,CAACnB,QAAQ;cAAA6H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN7G,OAAA,CAACjC,MAAM;MAACiI,IAAI,EAAEnF,WAAY;MAACoF,OAAO,EAAElC,kBAAmB;MAAA+B,QAAA,gBACrD9F,OAAA,CAAChC,WAAW;QAAA8H,QAAA,EAAC;MAAmB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC9C7G,OAAA,CAAC/B,aAAa;QAAA6H,QAAA,eACZ9F,OAAA,CAAC7B,IAAI;UAAA2H,QAAA,gBACH9F,OAAA,CAAC5B,QAAQ;YAAA0H,QAAA,eACP9F,OAAA,CAAC3B,YAAY;cACXmJ,OAAO,EAAC,MAAM;cACdC,SAAS,EAAE,CAAA1F,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmI,IAAI,KAAI;YAAU;cAAAxD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACX7G,OAAA,CAAC5B,QAAQ;YAAA0H,QAAA,eACP9F,OAAA,CAAC3B,YAAY;cACXmJ,OAAO,EAAC,OAAO;cACfC,SAAS,EAAE,CAAA1F,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoI,KAAK,KAAI;YAAU;cAAAzD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC,eAChB7G,OAAA,CAAC9B,aAAa;QAAA4H,QAAA,eACZ9F,OAAA,CAAC7C,MAAM;UAAC2J,OAAO,EAAE/C,kBAAmB;UAAA+B,QAAA,EAAC;QAAK;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGT7G,OAAA,CAACjC,MAAM;MAACiI,IAAI,EAAEjF,aAAc;MAACkF,OAAO,EAAEhC,oBAAqB;MAAA6B,QAAA,gBACzD9F,OAAA,CAAChC,WAAW;QAAA8H,QAAA,EAAC;MAAkB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC7C7G,OAAA,CAAC/B,aAAa;QAAA6H,QAAA,eACZ9F,OAAA,CAAC3C,UAAU;UAAAyI,QAAA,EAAC;QAEZ;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAChB7G,OAAA,CAAC9B,aAAa;QAAA4H,QAAA,gBACZ9F,OAAA,CAAC7C,MAAM;UAAC2J,OAAO,EAAE7C,oBAAqB;UAAA6B,QAAA,EAAC;QAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtD7G,OAAA,CAAC7C,MAAM;UAAC2J,OAAO,EAAE5C,eAAgB;UAAC4D,KAAK,EAAC,OAAO;UAAAhC,QAAA,EAAC;QAEhD;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAET7G,OAAA,CAACxC,QAAQ;MACPwI,IAAI,EAAE7C,KAAK,KAAK,IAAK;MACrBiH,gBAAgB,EAAE,IAAK;MACvBnE,OAAO,EAAEb,gBAAiB;MAAAU,QAAA,eAE1B9F,OAAA,CAACzC,KAAK;QAAC0I,OAAO,EAAEb,gBAAiB;QAACiF,QAAQ,EAAC,OAAO;QAAC3E,EAAE,EAAE;UAAEQ,KAAK,EAAE;QAAO,CAAE;QAAAJ,QAAA,EACtE3C;MAAK;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAC3G,EAAA,CA1aID,OAAO;EAAA,QAkBcT,OAAO,EACfC,WAAW,EACdf,QAAQ,EACLC,aAAa,EACNiB,cAAc;AAAA;AAAA0K,EAAA,GAtBlCrK,OAAO;AA4ab,eAAeA,OAAO;AAAC,IAAAqK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}